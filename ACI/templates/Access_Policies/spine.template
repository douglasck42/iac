# Use this Resource File to Register {{Name}} with node id {{Node_ID}} to the Fabric
# Requirements are:
# serial: Actual Serial Number of the switch.
# name: Hostname you want to assign.
# node_id: unique ID used to identify the switch in the APIC.
#   in the "Cisco ACI Object Naming and Numbering: Best Practice
#   The recommendation is that the Spines should be 101-199
#   and leafs should start at 200+ thru 4000.  As the number of
#   spines should always be less than the number of leafs
#   https://www.cisco.com/c/en/us/td/docs/switches/datacenter/aci/apic/sw/kb/b-Cisco-ACI-Naming-and-Numbering.html#id_107280
# node_type: uremote-leaf-wan or unspecified.
# role: spine, leaf.
# pod_id: Typically this will be 1 unless you are running multipod.

/*
Fabric > Access Policies > Inventory > Fabric Membership:[Registered Nodes or Nodes Pending Registration]
*/
resource "aci_fabric_node_member" "{{Name}}" {
	serial    = "{{Serial}}"
	name      = "{{Name}}"
	node_id   = "{{Node_ID}}"
	node_type = "{{Node_Type}}"
	role      = "{{Switch_Role}}"
	pod_id    = "{{Pod_ID}}"
}

/*
Admin > Firmware > Nodes:[Firmware Maintenance Group]
*/
resource "aci_rest" "maint_grp_{{Name}}" {
	path		= "/api/node/mo/uni/fabric/maintgrp-switch_{{Maint_Grp}}.json"
	class_name	= "maintMaintGrp"
	payload		= <<EOF
{
    "maintMaintGrp": {
        "attributes": {
            "dn": "uni/fabric/maintgrp-switch_{{Maint_Grp}}"
        },
        "children": [
            {
                "fabricNodeBlk": {
                    "attributes": {
                        "dn": "uni/fabric/maintgrp-switch_{{Maint_Grp}}/nodeblk-blk{{Node_ID}}-{{Node_ID}}",
                        "name": "blk{{Node_ID}}-{{Node_ID}}",
                        "from_": "{{Node_ID}}",
                        "to_": "{{Node_ID}}",
                        "rn": "nodeblk-blk{{Node_ID}}-{{Node_ID}}"
                    }
                }
            }
        ]
    }
}
	EOF
}

/*
Fabric > Access Policies > Interfaces > Spine Interfaces > Profiles > [Spine Interface Profile]
*/
resource "aci_spine_interface_profile" "{{Name}}" {
	name   = "{{Name}}"
}

/*
Fabric > Access Policies > Switches > Spine Switches > Profiles > [Spine Switch Profile]
*/
resource "aci_spine_profile" "{{Name}}" {
	name   = "{{Name}}"
}

/*
Fabric > Access Policies > Switches > Spine Switches > Profiles > [Spine Switch Profile]: [Spine Selectors]
*/
resource "aci_spine_switch_association" "{{Name}}" {
	spine_profile_dn               = aci_spine_profile.{{Name}}.id
	name                           = "{{Name}}"
	spine_switch_association_type  = "range"
}

/*
Fabric > Access Policies > Switches > Spine Switches > Profiles > [Spine Switch Profile]: Spine Interface Selector Profiles: [Spine Interface Profile]
*/
resource "aci_spine_port_selector" "{{Name}}" {
	spine_profile_dn   = aci_spine_profile.{{Name}}.id
	tdn                = aci_spine_interface_profile.{{Name}}.id
}

/*
Fabric > Access Policies > Switches > Spine Switches > Profiles > [Spine Switch Profile]: Spine Selectors Policy Group: default
*/
resource "aci_rest" "spine_policy_group_{{Name}}" {
	depends_on  = [aci_spine_profile.{{Name}}]
	path		= "/api/node/mo/uni/infra/spprof-{{Name}}/spines-{{Name}}-typ-range.json"
	class_name	= "infraSpineS"
	payload		= <<EOF
{
    "infraSpineS": {
        "attributes": {
            "dn": "uni/infra/spprof-{{Name}}/spines-{{Name}}-typ-range"
        },
        "children": [
            {
                "infraRsSpineAccNodePGrp": {
                    "attributes": {
                        "tDn": "uni/infra/funcprof/spaccnodepgrp-default"
                    },
                    "children": []
                }
            }
        ]
    }
}
	EOF
}